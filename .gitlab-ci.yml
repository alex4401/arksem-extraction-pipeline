image: registry.gitlab.com/alex4401/arkse-mobile-extraction
variables:
  GIT_SUBMODULE_STRATEGY: recursive
stages:
  - metadata
  - extract
#  - web

before_script:
  - mkdir -p artifacts artifacts/content tmp

# ANCHORS =================================================
.cache_setup_template: &setup_shared_cache
  cache:
    key: shared
    paths:
      - "extractor"
      - "thirdparty/googleplayapi/gpapi/"

.compile_gpapi_template: &compile_gpapi |
  if [ ! -f thirdparty/googleplayapi/gpapi/googleplay_pb2.py ]; then
    cd thirdparty/googleplayapi
    python setup.py build
    cd ../..
  fi

.download_extractor_template: &download_extractor_binary |
  if [ ! -f extractor ]; then
    curl "https://gitlab.com/api/v4/projects/13304753/jobs/artifacts/master/raw/target/debug/uasset-data-extractor?job=build" --output "extractor"
    chmod +x extractor
  fi

.chunk_job_template:
  extends: .cache_setup_template
  stage: extract
  cache:
    policy: pull
  artifacts:
    paths:
      - "artifacts/VERSION"
      - "artifacts/*.txt"
      - "artifacts/json/"
  dependencies:
    - get version code

# STAGE: METADATA =========================================
get version code:
  stage: metadata
  artifacts:
    paths:
      - "artifacts/VERSION"
  <<: *setup_shared_cache
  script:
    - *compile_gpapi
    - python pull-version-info.py artifacts/VERSION
    - >
      if [[ "$IS_SCHEDULED_JOB" == "1" ]]; then
        if [[ `cat artifacts/VERSION` == `curl https://gitlab.com/api/v4/projects/13303998/jobs/artifacts/master/raw/artifacts/VERSION?job=get%20version%20code` ]]; then
          curl --header "PRIVATE-TOKEN: $SCHEDULER_KEY" --request "DELETE" "https://gitlab.com/api/v4/projects/13303998/pipelines/$CI_PIPELINE_ID"
          exit 1
        fi
        exit 0
      fi
    # Warm up cache so the extractor is available immediately
    # in further stages.
    - *download_extractor_binary

# STAGE: EXTRACT ==========================================
main chunk:
  extends: .chunk_job_template
  script:
    - *compile_gpapi
    - *download_extractor_binary
    - python pull-blobs.py main `cat artifacts/VERSION`
    - cd tmp
    - unzip ../main.*.blob "ShooterGame/Content/Paks/pakchunk0-Android.pak"
    - ../thirdparty/ue4build/Engine/Binaries/Linux/UnrealPak-Linux-Debug.bin "ShooterGame/Content/Paks/pakchunk0-Android.pak" -List > ../artifacts/chunk0-filelist.txt
    - bash ../clean-up-unrealpak-output.sh ../artifacts/chunk0-filelist.txt
    - ../thirdparty/ue4build/Engine/Binaries/Linux/UnrealPak-Linux-Debug.bin "ShooterGame/Content/Paks/pakchunk0-Android.pak" -Extract $PWD/content
    - rm -r content/Engine
    - find content/ -type d -name "Animations" -exec rm -rv {} +
    - cd ..
    - python runner.py tmp/content "^(.*)\.uasset$" artifacts/json true
#    - python runner.py tmp/content "^(.*)\.uasset$" artifacts/json_dirty false

patch chunk:
  extends: .chunk_job_template
  script:
    - *compile_gpapi
    - *download_extractor_binary
    - python pull-blobs.py patch `cat artifacts/VERSION`
    - cd tmp
    - unzip ../patch.*.blob "ShooterGame/Content/Paks/pakchunk1-Android.pak"
    - ../thirdparty/ue4build/Engine/Binaries/Linux/UnrealPak-Linux-Debug.bin "ShooterGame/Content/Paks/pakchunk1-Android.pak" -List > ../artifacts/chunk1-filelist.txt
    - bash ../clean-up-unrealpak-output.sh ../artifacts/chunk1-filelist.txt
    - ../thirdparty/ue4build/Engine/Binaries/Linux/UnrealPak-Linux-Debug.bin "ShooterGame/Content/Paks/pakchunk1-Android.pak" -Extract $PWD/content
    - find content/ -type d -name "Animations" -exec rm -rv {} +
    - cd ..
    - python runner.py tmp/content "^(.*)\.uasset$" artifacts/json true
#    - python runner.py tmp/content "^DinoCharacterStatusComponent(.*)\.uasset$" artifacts/json_dinostats false

# STAGE: WEB ==============================================
#pages:
#  stage: web
#  variables:
#    GIT_SUBMODULE_STRATEGY: normal
#  artifacts:
#    paths:
#      - "public/"
#  dependencies: 
#    - main chunk
#    - patch chunk
#  script:
#    - echo "No generation yet." > public/index.html
